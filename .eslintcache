[{"/Users/ming/code/ccc-react-paint/src/index.tsx":"1","/Users/ming/code/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/ming/code/ccc-react-paint/src/util/toolType.ts":"3","/Users/ming/code/ccc-react-paint/src/context/index.ts":"4","/Users/ming/code/ccc-react-paint/src/util/dispatcher/index.ts":"5","/Users/ming/code/ccc-react-paint/src/components/canvas/index.tsx":"6","/Users/ming/code/ccc-react-paint/src/components/toolBar/tool/index.tsx":"7","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/index.tsx":"8","/Users/ming/code/ccc-react-paint/src/util/dispatcher/event.ts":"9","/Users/ming/code/ccc-react-paint/src/util/tool/shape.ts":"10","/Users/ming/code/ccc-react-paint/src/util/tool/tool.ts":"11","/Users/ming/code/ccc-react-paint/src/util/tool/index.ts":"12","/Users/ming/code/ccc-react-paint/src/util/snapshot/index.ts":"13","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/shape/index.tsx":"14","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/pen/index.tsx":"15","/Users/ming/code/ccc-react-paint/src/util/tool/eraser.ts":"16","/Users/ming/code/ccc-react-paint/src/util/tool/pen.ts":"17","/Users/ming/code/ccc-react-paint/src/util/tool/colorExtract.ts":"18","/Users/ming/code/ccc-react-paint/src/util/tool/colorFill.ts":"19","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/colorPanel/index.tsx":"20","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/shape/index.tsx":"21","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/slider/index.tsx":"22","/Users/ming/code/ccc-react-paint/src/components/canvas/TextBox.tsx":"23","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/text/index.tsx":"24","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/formatColor/index.tsx":"25","/Users/ming/code/ccc-react-paint/src/util/tool/Text.ts":"26","/Users/ming/code/ccc-react-paint/src/components/edit/index.tsx":"27","/Users/ming/code/ccc-react-paint/src/components/toolBar/other/index.tsx":"28"},{"size":161,"mtime":1654822003101,"results":"29","hashOfConfig":"30"},{"size":4841,"mtime":1654821992263,"results":"31","hashOfConfig":"30"},{"size":918,"mtime":1654817226369,"results":"32","hashOfConfig":"30"},{"size":1368,"mtime":1654817226367,"results":"33","hashOfConfig":"30"},{"size":2010,"mtime":1654780290365,"results":"34","hashOfConfig":"30"},{"size":7608,"mtime":1654821792218,"results":"35","hashOfConfig":"30"},{"size":3743,"mtime":1654817226367,"results":"36","hashOfConfig":"30"},{"size":1207,"mtime":1654817241751,"results":"37","hashOfConfig":"30"},{"size":104,"mtime":1654780290365,"results":"38","hashOfConfig":"30"},{"size":8172,"mtime":1654780290366,"results":"39","hashOfConfig":"30"},{"size":3074,"mtime":1654817226368,"results":"40","hashOfConfig":"30"},{"size":247,"mtime":1654817226368,"results":"41","hashOfConfig":"30"},{"size":948,"mtime":1654780290365,"results":"42","hashOfConfig":"30"},{"size":594,"mtime":1654817226366,"results":"43","hashOfConfig":"30"},{"size":821,"mtime":1654817226366,"results":"44","hashOfConfig":"30"},{"size":196,"mtime":1654780290365,"results":"45","hashOfConfig":"30"},{"size":3074,"mtime":1654780290366,"results":"46","hashOfConfig":"30"},{"size":1008,"mtime":1654780290365,"results":"47","hashOfConfig":"30"},{"size":3621,"mtime":1654817226368,"results":"48","hashOfConfig":"30"},{"size":1846,"mtime":1654817226365,"results":"49","hashOfConfig":"30"},{"size":3660,"mtime":1654780290361,"results":"50","hashOfConfig":"30"},{"size":1030,"mtime":1654780290362,"results":"51","hashOfConfig":"30"},{"size":458,"mtime":1654817226364,"results":"52","hashOfConfig":"30"},{"size":3535,"mtime":1654817307899,"results":"53","hashOfConfig":"30"},{"size":1136,"mtime":1654817226365,"results":"54","hashOfConfig":"30"},{"size":3624,"mtime":1654822315948,"results":"55","hashOfConfig":"30"},{"size":249,"mtime":1654818632457,"results":"56","hashOfConfig":"30"},{"size":1225,"mtime":1654818505721,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1spqqoa",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/ming/code/ccc-react-paint/src/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/CCCPaint.tsx",[],"/Users/ming/code/ccc-react-paint/src/util/toolType.ts",[],[],"/Users/ming/code/ccc-react-paint/src/context/index.ts",[],"/Users/ming/code/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/ming/code/ccc-react-paint/src/components/canvas/index.tsx",["121"],"/Users/ming/code/ccc-react-paint/src/components/toolBar/tool/index.tsx",["122"],"import React from \"react\";\nimport CreateTwoTone from \"@material-ui/icons/CreateTwoTone\";\nimport FormatColorFillTwoTone from \"@material-ui/icons/FormatColorFillTwoTone\";\nimport ColorizeTwoToneIcon from \"@material-ui/icons/ColorizeTwoTone\";\nimport AccessAlarm from \"@material-ui/icons/AccessAlarm\";\n// import SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport { ToolType } from \"../../../util/toolType\";\nimport { ToolTypeContext } from \"../../../context\";\nimport \"./index.less\";\n\nconst selectedToolClass = \"selected-tool\";\nexport interface ToolPanelProps {\n  className?: string;\n}\n\nconst ToolPanel: React.FC<ToolPanelProps> = (props) => {\n  const { className } = props;\n  return (\n    <div className={className ? `toolpanel ${className}` : \"toolpanel\"}>\n      <ToolTypeContext.Consumer>\n        {({ type, setType }) => (\n          <>\n            <span title=\"铅笔\" className=\"tool-Icon\">\n              <CreateTwoTone\n                className={\n                  type === ToolType.PEN\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.PEN);\n                }}\n              />\n            </span>\n            <span title=\"橡皮擦\" className=\"tool-Icon\">\n              <img\n                src=\"./icon/eraser.svg\"\n                className={\n                  type === ToolType.ERASER\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.ERASER);\n                }}\n              />\n            </span>\n            <span title=\"填充\" className=\"tool-Icon\">\n              <FormatColorFillTwoTone\n                className={\n                  type === ToolType.COLOR_FILL\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.COLOR_FILL);\n                }}\n              />\n            </span>\n            <span title=\"形状\" className=\"tool-Icon\">\n              <AccessAlarm\n                className={\n                  type === ToolType.SHAPE\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.SHAPE);\n                }}\n              />\n            </span>\n            {/* <span title=\"颜色选取器\" className=\"tool-Icon\">\n              <ColorizeTwoToneIcon\n                className={\n                  type === ToolType.COLOR_EXTRACT\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.COLOR_EXTRACT);\n                }}\n              />\n            </span> */}\n            <span title=\"文字\" className=\"tool-Icon\">\n              <TextFieldsIcon\n                className={\n                  type === ToolType.TEXT\n                    ? `tool-item ${selectedToolClass}`\n                    : \"tool-item\"\n                }\n                onClick={() => {\n                  setType(ToolType.TEXT);\n                }}\n              />\n            </span>\n            {/* <span title=\"放大镜\">\n                                    <SearchTwoToneIcon className={type === ToolType.MAGNIFYING ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.MAGNIFYING)}} />\n                                </span>  */}\n          </>\n        )}\n      </ToolTypeContext.Consumer>\n    </div>\n  );\n};\n\nexport default ToolPanel;\n","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/index.tsx",["123","124","125"],"import React, { useEffect } from \"react\";\nimport \"./index.less\";\nimport { ToolType } from \"../../../util/toolType\";\nimport { FC } from \"react\";\nimport ShowPen from \"./pen\";\nimport ShowShape from \"./shape\";\nimport FormatColor from \"./formatColor\";\nimport Text from \"./text\";\nimport { useMemo } from \"react\";\nimport { useState } from \"react\";\ninterface ToolbarProps {\n  toolType: ToolType;\n}\n\nconst ToolRightBar: FC<ToolbarProps> = (props) => {\n  const { toolType } = props;\n\n  const renderChild = (): any => {\n    let content = null;\n    switch (toolType) {\n      case ToolType.PEN:\n        content = <ShowPen />;\n        break;\n      case ToolType.SHAPE:\n        content = <ShowShape />;\n        break;\n      case ToolType.ERASER:\n        // setTool(new Eraser());\n        break;\n      case ToolType.TEXT:\n        content = <Text />;\n        break;\n      case ToolType.COLOR_FILL:\n        content = <FormatColor />;\n        break;\n      default:\n        break;\n    }\n    return content;\n  };\n\n  return <div className=\"ccc-showTool\">{renderChild()}</div>;\n};\n\nexport default React.memo(ToolRightBar, (preProps: ToolbarProps, nextProps: ToolbarProps) => {\n  return nextProps.toolType === ToolType.ERASER;\n});\n","/Users/ming/code/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/tool.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/index.ts",[],"/Users/ming/code/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/ming/code/ccc-react-paint/src/components/toolBar/right/shape/index.tsx",["126","127"],"import React from \"react\";\nimport { FC } from \"react\";\nimport Shape from \"../components/shape\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport ColorPanel from \"../components/colorPanel\";\n\nimport \"./index.less\";\n\nconst showShape: FC = () => {\n  return (\n    <div className=\"ccc-shape\">\n      <h3 className=\"ccc-shape-title\">\n        <span>Shope</span>\n        <ExpandMore />\n      </h3>\n      <Shape className=\"toolbar-item\" />\n      <ColorPanel className=\"toolbar-item\" />\n    </div>\n  );\n};\n\nexport default showShape;\n","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/pen/index.tsx",["128"],"import React from \"react\";\nimport { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"../../../../context\";\nimport { LineWidthType } from \"../../../../util/toolType\";\n\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport \"./index.less\";\nconst ShowPen: FC = () => {\n  const lineWidthContext = useContext(LineWidthContext);\n\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Brush thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n      <ColorPanel className=\"toolbar-item\" title=\"Panel Color\" />\n    </div>\n  );\n};\n\nexport default ShowPen;\n","/Users/ming/code/ccc-react-paint/src/util/tool/eraser.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/ming/code/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/colorPanel/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/shape/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/components/toolBar/right/components/slider/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/components/canvas/TextBox.tsx",["129"],"import React, { FC } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextBox: FC = () => {\n  return (\n    // <TextField\n    //   className=\"text-box\"\n    //   id=\"textBox\"\n    //   label=\"Multiline\"\n    //   multiline\n    //   rows={4}\n    //   // defaultValue=\"Default Value\"\n    // />\n    <textarea\n      id=\"textBox\"\n      name=\"story\"\n      className=\"text-box\"\n      //rows={2}\n    ></textarea>\n  );\n};\nexport default TextBox;\n","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/text/index.tsx",["130"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"../../../../context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport IntegerStep from \"../components/slider\";\nimport { useMemo } from \"react\";\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\"\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? ` ccc-text formatColor ${className}` : \"ccc-text colorpanel\"}>\n      <div className=\"content\">\n        <div className=\"font\">\n          <h3>Font</h3>\n          <FormControl fullWidth>\n            <Select\n              autoWidth\n              className=\"ccc-text-family\"\n              onChange={(event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n                TextToolContext.setFont({\n                  ...fontStyle,\n                  fontFamily: event.target.value as string\n                });\n              }}\n            >\n              {textFamily.map((va) => {\n                return (\n                  <MenuItem key={va} value={va}>\n                    {va}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>FLine Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <h3>color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: \"#\" + color.hex\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/ming/code/ccc-react-paint/src/components/toolBar/right/formatColor/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/util/tool/Text.ts",["131","132","133","134","135","136","137","138"],"/Users/ming/code/ccc-react-paint/src/components/edit/index.tsx",[],"/Users/ming/code/ccc-react-paint/src/components/toolBar/other/index.tsx",[],{"ruleId":"139","severity":1,"message":"140","line":47,"column":5,"nodeType":"141","messageId":"142","endLine":47,"endColumn":12},{"ruleId":"139","severity":1,"message":"143","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":27},{"ruleId":"139","severity":1,"message":"144","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"145","line":9,"column":10,"nodeType":"141","messageId":"142","endLine":9,"endColumn":17},{"ruleId":"139","severity":1,"message":"146","line":10,"column":10,"nodeType":"141","messageId":"142","endLine":10,"endColumn":18},{"ruleId":"139","severity":1,"message":"147","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"148","line":5,"column":20,"nodeType":"141","messageId":"142","endLine":5,"endColumn":31},{"ruleId":"139","severity":1,"message":"149","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":23},{"ruleId":"139","severity":1,"message":"150","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"151","line":38,"column":9,"nodeType":"141","messageId":"142","endLine":38,"endColumn":24},{"ruleId":"139","severity":1,"message":"152","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"153","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"154","line":2,"column":23,"nodeType":"141","messageId":"142","endLine":2,"endColumn":34},{"ruleId":"139","severity":1,"message":"155","line":2,"column":36,"nodeType":"141","messageId":"142","endLine":2,"endColumn":47},{"ruleId":"139","severity":1,"message":"156","line":2,"column":49,"nodeType":"141","messageId":"142","endLine":2,"endColumn":57},{"ruleId":"139","severity":1,"message":"157","line":2,"column":59,"nodeType":"141","messageId":"142","endLine":2,"endColumn":74},{"ruleId":"139","severity":1,"message":"158","line":29,"column":19,"nodeType":"141","messageId":"142","endLine":29,"endColumn":28},{"ruleId":"139","severity":1,"message":"159","line":29,"column":30,"nodeType":"141","messageId":"142","endLine":29,"endColumn":39},"@typescript-eslint/no-unused-vars","'onClick' is assigned a value but never used.","Identifier","unusedVar","'ColorizeTwoToneIcon' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'ColorBox' is defined but never used.","'createColor' is defined but never used.","'LineWidthType' is defined but never used.","'TextField' is defined but never used.","'activeColorType' is assigned a value but never used.","'ShapeToolType' is defined but never used.","'Point' is defined but never used.","'getMousePos' is defined but never used.","'getTouchPos' is defined but never used.","'hexToRgb' is defined but never used.","'updateImageData' is defined but never used.","'x' is defined but never used.","'y' is defined but never used."]